{"version":3,"sources":["assets/jss/component/cards/cardsStyle.js","components/Cards/Cards.js","components/Cards/CardHeader.js","components/Cards/CardFooter.js","components/Cards/CardBody.js","Container/Profile/Profile.js","hoc/Auxillary/Auxillary.js","assets/jss/component/Header/HeaderStyle.js","components/Header/Header.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["cardsStyle","card","border","marginTop","marginLeft","borderRadius","color","background","boxShadow","position","display","flexDirection","wordWrap","fontSize","transition","width","cardPlain","cardCarousel","overflow","cardBody","padding","flex","cardFooter","alignItems","backgroundColor","cardHeader","marginRight","marginBottom","cardHeaderPlain","useStyles","makeStyles","styles","Cards","props","classes","className","children","CardHeader","CardFooter","CardsBody","user","age","drugLevel","sleepDuration","Profile","state","name","score","this","CardBody","Component","Auxillary","HeaderStyle","Header","Button","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iPAqDeA,EArDI,CACjBC,KAAM,CACJC,OAAQ,MACRC,UAAW,OACXC,WAAY,OACZC,aAAc,MACdC,MAAO,sBACPC,WAAY,QACZC,UACE,sGACFC,SAAU,WACVC,QAAS,OACTC,cAAe,SACfC,SAAU,aACVC,SAAU,UACVC,WAAY,mBACZC,MAAM,QAGRC,UAAW,CACTT,WAAY,cACZC,UAAW,QAEbS,aAAc,CACZC,SAAU,UAEZC,SAAU,CACRC,QAAS,qBACTC,KAAM,YAERC,WAAY,CACVZ,QAAS,OACTa,WAAY,SACZC,gBAAiB,SACjBJ,QAAS,sBAEXK,WAAY,CACVpB,aAAc,MACde,QAAS,cACThB,WAAY,OACZsB,YAAa,OACbvB,UAAW,QACXD,OAAQ,IACRyB,aAAc,IACdpB,WAAY,UAGdqB,gBAAiB,CACfxB,WAAY,MACZsB,YAAa,Q,QC5CXG,EAAYC,YAAWC,GAYdC,EAVD,SAACC,GACb,IAAMC,EAAUL,IAEhB,OACE,yBAAKM,UAAWD,EAAQjC,MACnBgC,EAAMG,WCRTP,EAAYC,YAAWC,GAYdM,EAVI,SAACJ,GAClB,IAAMC,EAAUL,IAEhB,OACE,yBAAKM,UAAWD,EAAQT,YACpB,4BAAKQ,EAAMG,YCPbP,EAAYC,YAAWC,GAWdO,EATI,SAACL,GAClB,IAAMC,EAAUL,IAEhB,OAAQ,yBAAKM,UAAWD,EAAQZ,YAAxB,oBACcW,EAAMG,WCNxBP,EAAYC,YAAWC,GAedQ,EAbG,SAACN,GAEnB,IAAMC,EAAUL,IAEd,OACE,yBAAKM,UAAWD,EAAQf,UAAxB,YACcc,EAAMO,KAAKC,IAAI,6BAD7B,aAEeR,EAAMO,KAAKE,UAAU,6BAFpC,iBAGmBT,EAAMO,KAAKG,cAAc,+BCcjCC,E,4MApBbC,MAAQ,CACNL,KAAM,CAAEM,KAAM,QAASL,IAAK,KAAMC,UAAW,KAAMC,cAAe,SAClEI,MAAO,O,uDAIP,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAaC,KAAKH,MAAML,KAAKM,MAC7B,kBAACG,EAAD,CAAUT,KAAQQ,KAAKH,MAAML,OAG7B,kBAAC,EAAD,KAAaQ,KAAKH,MAAME,a,GAdZG,aCNPC,EADG,SAAClB,GAAD,OAAWA,EAAMG,UCclBgB,EAdG,CAChBC,OAAO,CACHhD,aAAc,MACde,QAAS,YACTlB,OAAQ,IACRyB,aAAc,OACdZ,MAAM,OACNS,gBAAgB,QAChBhB,UAAU,sGACVE,QAAQ,UACRa,WAAY,a,QCJdM,EAAYC,YAAWC,GAcdsB,EAZA,WACb,IAAMnB,EAAUL,IAChB,OACE,yBAAKM,UAAWD,EAAQmB,QACtB,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,mBCISC,E,uKAXP,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,W,GAJKL,aCONM,MATf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0a7af028.chunk.js","sourcesContent":["const cardsStyle = {\r\n  card: {\r\n    border: \"2px\",\r\n    marginTop: \"10vh\",\r\n    marginLeft: \"40vw\",\r\n    borderRadius: \"6px\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    background: \"coral\",\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12)\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    wordWrap: \"break-word\",\r\n    fontSize: \".875rem\",\r\n    transition: \"all 300ms linear\",\r\n    width:\"20vw\",\r\n    \r\n  },\r\n  cardPlain: {\r\n    background: \"transparent\",\r\n    boxShadow: \"none\"\r\n  },\r\n  cardCarousel: {\r\n    overflow: \"hidden\"\r\n  },\r\n  cardBody: {\r\n    padding: \"0.9375rem 1.875rem\",\r\n    flex: \"1 1 auto\",\r\n  },\r\n  cardFooter: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"orange\",\r\n    padding: \"0.9375rem 1.875rem\",\r\n  },\r\n  cardHeader: {\r\n    borderRadius: \"9px\",\r\n    padding: \"0.5rem 15px\",\r\n    marginLeft: \"15px\",\r\n    marginRight: \"15px\",\r\n    marginTop: \"-30px\",\r\n    border: \"0\",\r\n    marginBottom: \"0\",\r\n    background: \"orange\"\r\n    \r\n  },\r\n  cardHeaderPlain: {\r\n    marginLeft: \"0px\",\r\n    marginRight: \"0px\",\r\n  },\r\n};\r\n\r\nexport default cardsStyle;\r\n","import React from \"react\";\r\nimport styles from \"assets/jss/component/cards/cardsStyle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Cards = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.card} >\r\n        {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport styles from \"assets/jss/component/cards/cardsStyle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst CardHeader = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.cardHeader}>\r\n        <h1>{props.children}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardHeader;\r\n","import React from \"react\";\r\nimport styles from \"assets/jss/component/cards/cardsStyle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst CardFooter = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (<div className={classes.cardFooter}>\r\n      Your Sleep Score {props.children}\r\n      </div>\r\n      );\r\n};\r\n\r\nexport default CardFooter;\r\n","import React from \"react\";\r\nimport styles from \"assets/jss/component/cards/cardsStyle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst CardsBody = (props) => {\r\n\r\nconst classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.cardBody}>\r\n        Your age {props.user.age}<br/>\r\n        DrugLevel {props.user.drugLevel}<br/>\r\n        sleepDuration {props.user.sleepDuration}<br/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsBody;\r\n","import React, { Component } from \"react\";\r\nimport Cards from \"components/Cards/Cards\";\r\nimport CardHeader from \"components/Cards/CardHeader\";\r\nimport CardFooter from \"components/Cards/CardFooter\";\r\nimport CardBody from \"components/Cards/CardBody\";\r\nimport { EvStationSharp } from \"@material-ui/icons\";\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    user: { name: \"Evans\", age: \"27\", drugLevel: \"33\", sleepDuration: \"11hrs\" },\r\n    score: \"9.8\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Cards>\r\n          <CardHeader>{this.state.user.name}</CardHeader>\r\n          <CardBody user = {this.state.user}>\r\n           \r\n          </CardBody>\r\n          <CardFooter>{this.state.score}</CardFooter>\r\n        </Cards>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","const Auxillary = (props) => props.children;\r\nexport default Auxillary;","const HeaderStyle = {\r\n    Header:{\r\n        borderRadius: \"3px\",\r\n        padding: \"1rem 15px\",\r\n        border: \"0\",\r\n        marginBottom: \"10px\",\r\n        width:\"100%\",\r\n        backgroundColor:\"coral\",\r\n        boxShadow:\"0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12)\",\r\n        display:\"flexbox\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n  };\r\n  \r\n  export default HeaderStyle;\r\n  ","import React from \"react\";\r\n\r\nimport styles from \"assets/jss/component/Header/HeaderStyle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.Header}>\r\n      <Button>Analysis</Button>\r\n      <Button>Customize</Button>\r\n      <Button>Reviews</Button>\r\n      <Button>Featured</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\n\r\nimport Auxillary from \"hoc/Auxillary/Auxillary\";\r\nimport Header from 'components/Header/Header';\r\n\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        return (\r\n            <Auxillary>\r\n                <Header/>\r\n\r\n\r\n            </Auxillary>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\";\nimport Profile from \"Container/Profile/Profile.js\";\nimport Layout from \"hoc/Layout/Layout\";\nimport Auxillary from \"hoc/Auxillary/Auxillary\";\nfunction App() {\n  return (\n    <Auxillary>\n      <Layout></Layout>\n      <Profile />\n    </Auxillary>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}